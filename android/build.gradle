import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    if (project == rootProject) {
        repositories {
            google()
            gradlePluginPortal()
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:7.2.1'
            classpath("com.facebook.react:react-native-gradle-plugin")
            classpath("de.undercouch:gradle-download-task:5.0.1")
        }

        // TODO: This entire block should be removed once we upgrade
        // to RN v0.71+
        //
        // Patch needed for https://github.com/facebook/react-native/issues/35210
        // This is a patch to short-circuit the "+" dependencies inside the
        // users' app/build.gradle file and the various .gradle files of libraries.
        // As using plain "+" dependencies causes Gradle to always download the latest,
        // this logic forces Gradle to use latest release in the minor series.
        project.rootProject.allprojects {
            configurations.all {
                resolutionStrategy {
                    force "com.facebook.react:react-native:0.70.+"
                    force "com.facebook.react:hermes-engine:0.70.+"
                }
            }
        }
    }
}

def isNewArchitectureEnabled() {
  return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

apply plugin: 'com.android.library'
if (isNewArchitectureEnabled()) {
  apply plugin: 'com.facebook.react'
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 31)
    buildToolsVersion safeExtGet('buildToolsVersion', '31.0.0')

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 28)
        if (System.properties['os.arch'] == "aarch64") {
            // For M1 Users we need to use the NDK 24 which added support for aarch64
            ndkVersion safeExtGet('ndkVersion', '24.0.8215888')
        } else {
            // Otherwise we default to the side-by-side NDK version from AGP.
            ndkVersion safeExtGet('ndkVersion', '21.4.7075529')
        }
        targetSdkVersion safeExtGet('targetSdkVersion', 31)
        versionCode 4
        versionName "0.6.0"
        buildConfigField("boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString())
        externalNativeBuild {
          cmake {
            arguments "-DBUILD_JNI_LIB=ON", "-DBUILD_SHARED_LIBS=ON", "-DBUILD_STATIC_LIBS=OFF"
            targets "pcre2-8-shared", "lighttpd-common", "mod_indexfile", "mod_dirlisting", "mod_staticfile", "lighttpd"
          }
        }
    }
    externalNativeBuild {
      cmake {
        path "src/main/CMakeLists.txt"
      }
    }
    sourceSets {
      main {
        if (isNewArchitectureEnabled()) {
          java.srcDirs += ['src/newarch']
        } else {
          java.srcDirs += ['src/oldarch']
        }
      }
    }
    buildTypes {
        release {
            minifyEnabled true
        }
    }
    lintOptions {
        disable 'GradleCompatible'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"
    }
    maven {
        // Android JSC is installed from npm
        url "$rootDir/../node_modules/jsc-android/dist"
    }
    google()
}

dependencies {
    implementation 'com.facebook.react:react-native:+'  // From node_modules
}
